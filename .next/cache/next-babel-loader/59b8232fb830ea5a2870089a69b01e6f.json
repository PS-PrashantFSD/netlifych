{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { motion, useAnimation } from 'framer-motion';\nimport { useMenuContext } from '../../../context/menu';\nimport useCursorStyle from '../../../hooks/useCursorStyle';\nimport useMediaQuery from '../../../hooks/useMediaQuery';\nimport useStyledTheme from '../../../hooks/useStyledTheme';\nimport AnimateOnScreen from '../../AnimateOnScreen';\nimport Arrow from '../../Icons/Arrow';\nimport { ContentSection, ProjectAnchor, ProjectInfo, ProjectTitle, VideoPreview, MenuContainer, MenuButton } from './styles';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst transition = {\n  duration: 1,\n  ease: [0.4, 0, 0.2, 1]\n};\nconst words = [\"nexAR\", \"nexNet\", \"nexAi\"];\nconst FeaturedProject = () => {\n  const {\n    0: currentWord,\n    1: setCurrentWord\n  } = useState(\"\");\n  const {\n    0: wordIndex,\n    1: setWordIndex\n  } = useState(0);\n  const {\n    0: isTyping,\n    1: setIsTyping\n  } = useState(true);\n  const controlsInfo = useAnimation();\n  const controlsArrow = useAnimation();\n  const theme = useStyledTheme();\n  const [{\n    isMenuOpen\n  }] = useMenuContext();\n  const {\n    addCursorColor,\n    resetCursorColor,\n    addCursorBorder,\n    removeCursorBorder\n  } = useCursorStyle();\n  const isTabletView = useMediaQuery(({\n    breakpoints\n  }) => `(max-width:${breakpoints.sizes.tablet}px)`);\n  useEffect(() => {\n    const typingEffect = () => {\n      if (isTyping) {\n        setCurrentWord(prev => {\n          const nextCharIndex = prev.length < words[wordIndex].length ? prev.length + 1 : prev.length;\n          return words[wordIndex].slice(0, nextCharIndex);\n        });\n      } else {\n        setCurrentWord(prev => prev.slice(0, -1));\n      }\n    };\n    const timeout = setTimeout(() => {\n      if (isTyping) {\n        if (currentWord.length === words[wordIndex].length) {\n          setIsTyping(false);\n          setTimeout(() => setIsTyping(true), 1000); // Wait before starting to clear\n        }\n      } else {\n        if (currentWord.length === 0) {\n          setWordIndex(prev => (prev + 1) % words.length);\n          setIsTyping(true);\n        }\n      }\n      typingEffect();\n    }, isTyping ? 150 : 100);\n    return () => clearTimeout(timeout);\n  }, [currentWord, isTyping, wordIndex]);\n  const handleMouseEnter = () => {\n    addCursorBorder();\n    addCursorColor(theme.text);\n  };\n  const handleMouseLeave = () => {\n    if (isMenuOpen) return;\n    removeCursorBorder();\n    resetCursorColor();\n  };\n  const handleAnchorHoverStart = () => {\n    addCursorBorder();\n    controlsInfo.start({\n      opacity: 1\n    });\n    controlsArrow.start({\n      x: 0\n    });\n  };\n  const handleAnchorHoverEnd = () => {\n    removeCursorBorder();\n    controlsInfo.start({\n      opacity: 0\n    });\n    controlsArrow.start({\n      x: isTabletView ? -25.19 : -33\n    });\n  };\n  useEffect(() => {\n    controlsArrow.start({\n      x: isTabletView ? -25.19 : -33\n    });\n  }, [controlsArrow, isTabletView]);\n  return /*#__PURE__*/_jsxs(ContentSection, {\n    children: [/*#__PURE__*/_jsx(AnimateOnScreen, {\n      children: /*#__PURE__*/_jsx(motion.div, {\n        children: /*#__PURE__*/_jsx(Link, {\n          href: \"/projects/not-humble\",\n          passHref: true,\n          children: /*#__PURE__*/_jsxs(ProjectAnchor, {\n            onHoverStart: handleAnchorHoverStart,\n            onHoverEnd: handleAnchorHoverEnd,\n            children: [/*#__PURE__*/_jsx(ProjectInfo, {\n              children: /*#__PURE__*/_jsxs(ProjectTitle, {\n                children: [\"GET \", /*#__PURE__*/_jsx(\"br\", {}), \" STARTED\", /*#__PURE__*/_jsx(\"span\", {\n                  className: \"arrow\",\n                  children: /*#__PURE__*/_jsx(Arrow, {\n                    animate: controlsArrow,\n                    transition: transition\n                  })\n                })]\n              })\n            }), /*#__PURE__*/_jsx(VideoPreview, {\n              children: /*#__PURE__*/_jsx(\"video\", {\n                loop: true,\n                autoPlay: true,\n                muted: true,\n                src: \"videos/vidm.mp4\"\n              })\n            })]\n          })\n        })\n      })\n    }), /*#__PURE__*/_jsx(AnimateOnScreen, {\n      children: /*#__PURE__*/_jsx(MenuContainer, {\n        children: /*#__PURE__*/_jsx(Link, {\n          href: \"/services\",\n          passHref: true,\n          children: /*#__PURE__*/_jsx(MenuButton, {\n            sticky: false,\n            title: \"View More\",\n            onMouseEnter: handleMouseEnter,\n            onMouseLeave: handleMouseLeave\n          })\n        })\n      })\n    })]\n  });\n};\nexport default FeaturedProject;","map":null,"metadata":{},"sourceType":"module"}