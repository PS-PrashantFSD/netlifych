{"ast":null,"code":"import React from 'react';\nimport NextLink from 'next/link';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useMenuContext } from '../../context/menu';\nimport useCursorStyle from '../../hooks/useCursorStyle';\nimport useStyledTheme from '../../hooks/useStyledTheme';\nimport useMediaQuery from '../../hooks/useMediaQuery';\nimport routes from '../../utils/constants/routes';\nimport Arrow from '../Icons/Arrow';\nimport { listVariants, listItemsVariants, linkVariants, videoRevealVariants, videoVariants, transition } from './variants';\nimport { Backdrop, Container, CloseButton, Header, Navigation, List, Link, ArrowContainer, Footer, FooterText, VideoContainer, VideoReveal, Video, Address, SocialMedia } from './styles';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Menu = () => {\n  const containerRef = React.useRef(null);\n  const videoContainerRef = React.useRef(null);\n  const [revealVideo, setRevealVideo] = React.useState(null);\n  const [isHovering, setIsHovering] = React.useState(false);\n  const theme = useStyledTheme();\n  const [{\n    isMenuOpen,\n    dispatch\n  }] = useMenuContext();\n  const {\n    addCursorBorder,\n    removeCursorBorder,\n    addCursorColor,\n    resetCursorColor\n  } = useCursorStyle();\n  const isMobile = useMediaQuery(_ref => {\n    let {\n      breakpoints\n    } = _ref;\n    return `(max-width:${breakpoints.sizes.small}px)`;\n  });\n  const handleAnimationComplete = React.useCallback(() => {\n    addCursorColor(theme.text);\n  }, [addCursorColor, theme.text]);\n  const handleExitComplete = React.useCallback(() => {\n    resetCursorColor();\n  }, [resetCursorColor]);\n  const handleHoverStart = React.useCallback(event => {\n    addCursorBorder();\n    setRevealVideo(event.target.name);\n  }, [addCursorBorder]);\n  const handleHoverEnd = React.useCallback(() => {\n    removeCursorBorder();\n    setRevealVideo(null);\n  }, [removeCursorBorder]);\n  React.useEffect(() => {\n    const handleResize = () => {\n      if (isMenuOpen && containerRef.current && videoContainerRef.current) {\n        const offset = 256;\n        const {\n          width\n        } = containerRef.current.getBoundingClientRect();\n        const left = (window.innerWidth - width) / 2 + offset;\n        videoContainerRef.current.style.left = `${left}px`;\n      }\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [isMenuOpen]);\n  return /*#__PURE__*/_jsx(AnimatePresence, {\n    onExitComplete: handleExitComplete,\n    children: isMenuOpen && /*#__PURE__*/_jsxs(Backdrop, {\n      onAnimationComplete: handleAnimationComplete,\n      children: [/*#__PURE__*/_jsxs(Container, {\n        ref: containerRef,\n        children: [/*#__PURE__*/_jsxs(Header, {\n          children: [/*#__PURE__*/_jsx(\"h3\", {\n            children: \"Menu\"\n          }), /*#__PURE__*/_jsx(CloseButton, {\n            title: \"Close\"\n          })]\n        }), /*#__PURE__*/_jsx(Navigation, {\n          children: /*#__PURE__*/_jsx(List, {\n            variants: listVariants,\n            initial: \"hidden\",\n            animate: \"show\",\n            onHoverStart: () => setIsHovering(true),\n            onHoverEnd: () => setIsHovering(false),\n            children: routes.map(route => /*#__PURE__*/_jsx(motion.li, {\n              variants: listItemsVariants,\n              transition: {\n                duration: 0.9,\n                ease: transition.ease\n              },\n              children: /*#__PURE__*/_jsx(NextLink, {\n                href: route.path,\n                passHref: true,\n                children: /*#__PURE__*/_jsxs(Link, {\n                  name: route.id,\n                  onClick: () => {\n                    dispatch({\n                      type: 'CLOSE_MENU'\n                    }); // Dispatch close action\n                  },\n                  onHoverStart: handleHoverStart,\n                  onHoverEnd: handleHoverEnd,\n                  custom: {\n                    isMobile,\n                    color: theme.text\n                  },\n                  initial: \"initial\",\n                  whileHover: \"hover\",\n                  variants: linkVariants,\n                  transition: transition,\n                  children: [/*#__PURE__*/_jsx(ArrowContainer, {\n                    children: /*#__PURE__*/_jsx(Arrow, {\n                      fillColor: theme.background\n                    })\n                  }), route.title]\n                })\n              })\n            }, route.id))\n          })\n        }), /*#__PURE__*/_jsxs(Footer, {\n          children: [/*#__PURE__*/_jsx(FooterText, {\n            className: \"link\",\n            as: \"a\",\n            href: \"mailto:info@furrow.studio\",\n            onMouseEnter: addCursorBorder,\n            onMouseLeave: removeCursorBorder,\n            children: \"info@luminexa.in\"\n          }), /*#__PURE__*/_jsx(FooterText, {\n            className: \"link\",\n            as: \"a\",\n            href: \"tel:+91.82.417.0634\",\n            onMouseEnter: addCursorBorder,\n            onMouseLeave: removeCursorBorder,\n            children: \"+91.866.044.9970\"\n          }), /*#__PURE__*/_jsx(FooterText, {\n            className: \"copyright\",\n            children: \"\\xA9 luminexa 2024\"\n          }), isMobile && /*#__PURE__*/_jsx(Address, {\n            children: /*#__PURE__*/_jsxs(FooterText, {\n              children: [\"14 1st Stage Bhanashankari\", /*#__PURE__*/_jsx(\"br\", {}), \" Bangalore, KA IN\"]\n            })\n          }), /*#__PURE__*/_jsx(SocialMedia, {})]\n        })]\n      }), !isMobile && /*#__PURE__*/_jsxs(VideoContainer, {\n        ref: videoContainerRef,\n        children: [/*#__PURE__*/_jsx(VideoReveal, {\n          variants: videoRevealVariants,\n          transition: transition,\n          initial: \"show\",\n          animate: isHovering ? 'hidden' : 'show'\n        }), routes.map(route => /*#__PURE__*/_jsx(Video, {\n          src: `/videos/${route.video}`,\n          variants: videoVariants,\n          initial: \"hidden\",\n          animate: route.id === revealVideo ? 'show' : 'hidden',\n          transition: transition,\n          loop: true,\n          autoPlay: true\n        }, route.id))]\n      })]\n    })\n  });\n};\nexport default /*#__PURE__*/React.memo(Menu);","map":null,"metadata":{},"sourceType":"module"}