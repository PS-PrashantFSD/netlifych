{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nconst DEFAULT_OPTIONS = {\n  background: '#000',\n  completeRatio: 1,\n  enabled: true,\n  onComplete: null,\n  onProgress: null,\n  size: 40\n};\nconst getElementComputedStyled = (element, prop) => parseFloat(getComputedStyle(element, null)[prop].replace('px', ''));\nconst factory = () => {\n  let _canvas = null;\n  let _context = null;\n  let _data = {};\n  const _handleEraserProgress = (currentX, currentY) => {\n    const {\n      colParts,\n      numParts,\n      completeRatio,\n      enabled,\n      size,\n      onComplete,\n      onProgress\n    } = _data;\n    if (!enabled) return;\n    let p = Math.floor(currentX / size) + Math.floor(currentY / size) * colParts;\n    if (p >= 0 && p < numParts) {\n      _data.ratio += _data.parts[p];\n      _data.parts[p] = 0;\n      if (!_data.complete) {\n        p = _data.ratio / _data.numParts;\n        if (p >= completeRatio) {\n          _data.complete = true;\n          if (onComplete) {\n            onComplete();\n          }\n          return;\n        }\n        if (onProgress) {\n          onProgress(p);\n        }\n      }\n    }\n  };\n  const _onMouseMove = event => {\n    event.preventDefault();\n    const {\n      enabled,\n      posX,\n      posY,\n      scaleRatio,\n      touchX,\n      touchY\n    } = _data;\n    const currentX = (event.pageX - posX) * scaleRatio;\n    const currentY = (event.pageY - posY) * scaleRatio;\n    if (enabled) {\n      _handleEraserProgress(currentX, currentY);\n      _context.beginPath();\n      _context.moveTo(touchX, touchY);\n      _context.lineTo(currentX, currentY);\n      _context.stroke();\n    }\n    _data.touchX = currentX;\n    _data.touchY = currentY;\n  };\n  const _onMouseDown = event => {\n    event.preventDefault();\n    const {\n      enabled,\n      posX,\n      posY,\n      scaleRatio\n    } = _data;\n    const currentX = (event.pageX - posX) * scaleRatio;\n    const currentY = (event.pageY - posY) * scaleRatio;\n    _data.touchDown = true;\n    _data.touchX = currentX;\n    _data.touchY = currentY;\n    if (enabled) {\n      _handleEraserProgress(currentX, currentY);\n      _context.beginPath();\n      _context.moveTo(currentX - 1, currentY);\n      _context.lineTo(currentX, currentY);\n      _context.stroke();\n    }\n    _canvas.addEventListener('mousemove', _onMouseMove);\n  };\n  const _onMouseClick = event => {\n    event.preventDefault();\n    const {\n      enabled,\n      posX,\n      posY,\n      scaleRatio\n    } = _data;\n    const currentX = (event.pageX - posX) * scaleRatio;\n    const currentY = (event.pageY - posY) * scaleRatio;\n    _data.touchDown = true;\n    _data.touchX = currentX;\n    _data.touchY = currentY;\n    if (enabled) {\n      _handleEraserProgress(currentX, currentY);\n      _context.beginPath();\n      _context.moveTo(currentX - 1, currentY);\n      _context.lineTo(currentX, currentY);\n      _context.stroke();\n    }\n    _canvas.addEventListener('mousemove', _onMouseMove);\n  };\n  const init = (source, options = {}) => {\n    if (!source) {\n      throw new Error('No source element provided. It must be an HTML canvas element.');\n    }\n    const currentOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n    const {\n      size,\n      background\n    } = currentOptions;\n    _canvas = source;\n    _context = _canvas.getContext('2d');\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const backingStoreRatio = _context.webkitBackingStorePixelRatio || _context.mozBackingStorePixelRatio || _context.msBackingStorePixelRatio || _context.oBackingStorePixelRatio || _context.backingStorePixelRatio || 1;\n    const scaleRatio = devicePixelRatio / backingStoreRatio;\n    const realWidth = getElementComputedStyled(_canvas, 'width');\n    const realHeight = getElementComputedStyled(_canvas, 'height');\n    const width = realWidth * scaleRatio;\n    const height = realHeight * scaleRatio;\n    if (devicePixelRatio !== backingStoreRatio) {\n      _canvas.width = width;\n      _canvas.height = height;\n      _canvas.style.width = `${realWidth}px`;\n      _canvas.style.height = `${realHeight}px`;\n    } else {\n      _canvas.width = realWidth;\n      _canvas.height = realHeight;\n      _canvas.style.width = '';\n      _canvas.style.height = '';\n    }\n\n    // _context.scale(scaleRatio, scaleRatio);\n    _context.fillStyle = background;\n    _context.fillRect(0, 0, width, height);\n    _context.drawImage(_canvas, 0, 0, width, height);\n\n    // prepare context for drawing operations\n    _context.globalCompositeOperation = 'destination-out';\n    _context.lineWidth = size;\n    _context.lineCap = 'round';\n\n    // bind events\n    _canvas.addEventListener('mouseenter', _onMouseDown);\n    _canvas.addEventListener('click', _onMouseClick);\n    // _canvas.addEventListener('touchstart', _onTouchStart);\n    // _canvas.addEventListener('touchmove', _onTouchMove);\n    // _canvas.addEventListener('touchend', _onTouchEnd);\n\n    // reset parts\n    const parts = [];\n    const colParts = Math.floor(width / size);\n    const numParts = colParts * Math.floor(height / size);\n    for (let i = 0; i < numParts; i++) {\n      parts.push(1);\n    }\n    _data = _objectSpread({\n      posX: _canvas.offsetLeft,\n      posY: _canvas.offsetTop,\n      touchDown: false,\n      touchID: -999,\n      touchX: 0,\n      touchY: 0,\n      ptouchX: 0,\n      ptouchY: 0,\n      w: width,\n      h: height,\n      scaleRatio,\n      ratio: 0,\n      complete: false,\n      currentOptions\n    }, currentOptions);\n  };\n  const clear = () => {\n    const {\n      w,\n      h,\n      numParts,\n      onComplete\n    } = _data;\n    if (_data) {\n      _context.clearRect(0, 0, w, h);\n      for (let i = 0; i < numParts; i++) {\n        _data.parts[i] = 0;\n      }\n      _data.ratio = numParts;\n      _data.complete = true;\n      if (onComplete) {\n        onComplete();\n      }\n    }\n  };\n  const reset = () => {\n    const {\n      w,\n      h,\n      numParts\n    } = _data;\n    _context.globalCompositeOperation = 'source-over';\n    _context.drawImage(_canvas, 0, 0, w, h);\n    _context.globalCompositeOperation = 'destination-out';\n    for (let i = 0; i < numParts; i++) {\n      _data.parts[i] = 1;\n    }\n    _data.ratio = 0;\n    _data.complete = false;\n    _data.touchDown = false;\n  };\n  return {\n    init,\n    clear,\n    reset\n  };\n};\nexport default factory;","map":{"version":3,"names":["DEFAULT_OPTIONS","background","completeRatio","enabled","onComplete","onProgress","size","getElementComputedStyled","element","prop","parseFloat","getComputedStyle","replace","factory","_canvas","_context","_data","_handleEraserProgress","currentX","currentY","colParts","numParts","p","Math","floor","ratio","parts","complete","_onMouseMove","event","preventDefault","posX","posY","scaleRatio","touchX","touchY","pageX","pageY","beginPath","moveTo","lineTo","stroke","_onMouseDown","touchDown","addEventListener","_onMouseClick","init","source","options","Error","currentOptions","_objectSpread","getContext","devicePixelRatio","window","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","realWidth","realHeight","width","height","style","fillStyle","fillRect","drawImage","globalCompositeOperation","lineWidth","lineCap","i","push","offsetLeft","offsetTop","touchID","ptouchX","ptouchY","w","h","clear","clearRect","reset"],"sources":["C:/Users/Prashant/Desktop/Projects/netlifych/components/CanvasEraser/CanvasEraserFactory.js"],"sourcesContent":["const DEFAULT_OPTIONS = {\r\n  background: '#000',\r\n  completeRatio: 1,\r\n  enabled: true,\r\n  onComplete: null,\r\n  onProgress: null,\r\n  size: 40,\r\n};\r\n\r\nconst getElementComputedStyled = (element, prop) => parseFloat(getComputedStyle(element, null)[prop].replace('px', ''));\r\n\r\nconst factory = () => {\r\n  let _canvas = null;\r\n  let _context = null;\r\n  let _data = {};\r\n\r\n  const _handleEraserProgress = (currentX, currentY) => {\r\n    const {\r\n      colParts,\r\n      numParts,\r\n      completeRatio,\r\n      enabled,\r\n      size,\r\n      onComplete,\r\n      onProgress,\r\n    } = _data;\r\n\r\n    if (!enabled) return;\r\n\r\n    let p = Math.floor(currentX / size) + Math.floor(currentY / size) * colParts;\r\n\r\n    if (p >= 0 && p < numParts) {\r\n      _data.ratio += _data.parts[p];\r\n      _data.parts[p] = 0;\r\n\r\n      if (!_data.complete) {\r\n        p = _data.ratio / _data.numParts;\r\n\r\n        if (p >= completeRatio) {\r\n          _data.complete = true;\r\n          if (onComplete) {\r\n            onComplete();\r\n          }\r\n          return;\r\n        }\r\n\r\n        if (onProgress) {\r\n          onProgress(p);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const _onMouseMove = (event) => {\r\n    event.preventDefault();\r\n\r\n    const {\r\n      enabled, posX, posY, scaleRatio, touchX, touchY,\r\n    } = _data;\r\n    const currentX = (event.pageX - posX) * scaleRatio;\r\n    const currentY = (event.pageY - posY) * scaleRatio;\r\n\r\n    if (enabled) {\r\n      _handleEraserProgress(currentX, currentY);\r\n      _context.beginPath();\r\n      _context.moveTo(touchX, touchY);\r\n      _context.lineTo(currentX, currentY);\r\n      _context.stroke();\r\n    }\r\n\r\n    _data.touchX = currentX;\r\n    _data.touchY = currentY;\r\n  };\r\n\r\n  const _onMouseDown = (event) => {\r\n    event.preventDefault();\r\n\r\n    const {\r\n      enabled, posX, posY, scaleRatio,\r\n    } = _data;\r\n    const currentX = (event.pageX - posX) * scaleRatio;\r\n    const currentY = (event.pageY - posY) * scaleRatio;\r\n\r\n    _data.touchDown = true;\r\n    _data.touchX = currentX;\r\n    _data.touchY = currentY;\r\n\r\n    if (enabled) {\r\n      _handleEraserProgress(currentX, currentY);\r\n\r\n      _context.beginPath();\r\n      _context.moveTo(currentX - 1, currentY);\r\n      _context.lineTo(currentX, currentY);\r\n      _context.stroke();\r\n    }\r\n\r\n    _canvas.addEventListener('mousemove', _onMouseMove);\r\n  };\r\n\r\n  const _onMouseClick = (event) => {\r\n    event.preventDefault();\r\n\r\n    const {\r\n      enabled, posX, posY, scaleRatio,\r\n    } = _data;\r\n    const currentX = (event.pageX - posX) * scaleRatio;\r\n    const currentY = (event.pageY - posY) * scaleRatio;\r\n\r\n    _data.touchDown = true;\r\n    _data.touchX = currentX;\r\n    _data.touchY = currentY;\r\n\r\n    if (enabled) {\r\n      _handleEraserProgress(currentX, currentY);\r\n\r\n      _context.beginPath();\r\n      _context.moveTo(currentX - 1, currentY);\r\n      _context.lineTo(currentX, currentY);\r\n      _context.stroke();\r\n    }\r\n\r\n    _canvas.addEventListener('mousemove', _onMouseMove);\r\n  };\r\n\r\n  const init = (source, options = {}) => {\r\n    if (!source) {\r\n      throw new Error(\r\n        'No source element provided. It must be an HTML canvas element.',\r\n      );\r\n    }\r\n\r\n    const currentOptions = { ...DEFAULT_OPTIONS, ...options };\r\n    const { size, background } = currentOptions;\r\n\r\n    _canvas = source;\r\n    _context = _canvas.getContext('2d');\r\n    const devicePixelRatio = window.devicePixelRatio || 1;\r\n    const backingStoreRatio = _context.webkitBackingStorePixelRatio\r\n      || _context.mozBackingStorePixelRatio\r\n      || _context.msBackingStorePixelRatio\r\n      || _context.oBackingStorePixelRatio\r\n      || _context.backingStorePixelRatio\r\n      || 1;\r\n    const scaleRatio = devicePixelRatio / backingStoreRatio;\r\n\r\n    const realWidth = getElementComputedStyled(_canvas, 'width');\r\n    const realHeight = getElementComputedStyled(_canvas, 'height');\r\n    const width = realWidth * scaleRatio;\r\n    const height = realHeight * scaleRatio;\r\n\r\n    if (devicePixelRatio !== backingStoreRatio) {\r\n      _canvas.width = width;\r\n      _canvas.height = height;\r\n      _canvas.style.width = `${realWidth}px`;\r\n      _canvas.style.height = `${realHeight}px`;\r\n    } else {\r\n      _canvas.width = realWidth;\r\n      _canvas.height = realHeight;\r\n      _canvas.style.width = '';\r\n      _canvas.style.height = '';\r\n    }\r\n\r\n    // _context.scale(scaleRatio, scaleRatio);\r\n    _context.fillStyle = background;\r\n    _context.fillRect(0, 0, width, height);\r\n    _context.drawImage(_canvas, 0, 0, width, height);\r\n\r\n    // prepare context for drawing operations\r\n    _context.globalCompositeOperation = 'destination-out';\r\n    _context.lineWidth = size;\r\n    _context.lineCap = 'round';\r\n\r\n    // bind events\r\n    _canvas.addEventListener('mouseenter', _onMouseDown);\r\n    _canvas.addEventListener('click', _onMouseClick);\r\n    // _canvas.addEventListener('touchstart', _onTouchStart);\r\n    // _canvas.addEventListener('touchmove', _onTouchMove);\r\n    // _canvas.addEventListener('touchend', _onTouchEnd);\r\n\r\n    // reset parts\r\n    const parts = [];\r\n    const colParts = Math.floor(width / size);\r\n    const numParts = colParts * Math.floor(height / size);\r\n    for (let i = 0; i < numParts; i++) {\r\n      parts.push(1);\r\n    }\r\n\r\n    _data = {\r\n      posX: _canvas.offsetLeft,\r\n      posY: _canvas.offsetTop,\r\n      touchDown: false,\r\n      touchID: -999,\r\n      touchX: 0,\r\n      touchY: 0,\r\n      ptouchX: 0,\r\n      ptouchY: 0,\r\n      w: width,\r\n      h: height,\r\n      scaleRatio,\r\n      ratio: 0,\r\n      complete: false,\r\n      currentOptions,\r\n      ...currentOptions,\r\n    };\r\n  };\r\n\r\n  const clear = () => {\r\n    const {\r\n      w, h, numParts, onComplete,\r\n    } = _data;\r\n\r\n    if (_data) {\r\n      _context.clearRect(0, 0, w, h);\r\n\r\n      for (let i = 0; i < numParts; i++) {\r\n        _data.parts[i] = 0;\r\n      }\r\n\r\n      _data.ratio = numParts;\r\n      _data.complete = true;\r\n\r\n      if (onComplete) {\r\n        onComplete();\r\n      }\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    const { w, h, numParts } = _data;\r\n\r\n    _context.globalCompositeOperation = 'source-over';\r\n    _context.drawImage(_canvas, 0, 0, w, h);\r\n    _context.globalCompositeOperation = 'destination-out';\r\n\r\n    for (let i = 0; i < numParts; i++) {\r\n      _data.parts[i] = 1;\r\n    }\r\n\r\n    _data.ratio = 0;\r\n    _data.complete = false;\r\n    _data.touchDown = false;\r\n  };\r\n\r\n  return {\r\n    init,\r\n    clear,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default factory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}