{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport colors from '../colors';\nimport base from './base';\nexport default _objectSpread(_objectSpread({}, base), {}, {\n  text: colors.white,\n  background: colors.black\n});","map":{"version":3,"names":["colors","base","_objectSpread","text","white","background","black"],"sources":["C:/Users/Prashant/Desktop/Projects/netlifych/styles/themes/dark.js"],"sourcesContent":["import colors from '../colors';\r\nimport base from './base';\r\n\r\nexport default {\r\n  ...base,\r\n  text: colors.white,\r\n  background: colors.black,\r\n};\r\n"],"mappings":";;;;;AAAA,OAAOA,MAAM,MAAM,WAAW;AAC9B,OAAOC,IAAI,MAAM,QAAQ;AAEzB,eAAAC,aAAA,CAAAA,aAAA,KACKD,IAAI;EACPE,IAAI,EAAEH,MAAM,CAACI,KAAK;EAClBC,UAAU,EAAEL,MAAM,CAACM;AAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}