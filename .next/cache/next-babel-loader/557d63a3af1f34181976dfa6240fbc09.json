{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport React from 'react';\nimport useForkRef from '../../hooks/useForkRef';\nimport canvasEraserFactory from './CanvasEraserFactory';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CanvasEraser = (props, ref) => {\n  const {\n      completeRatio = 1,\n      enabled = true,\n      onComplete = null,\n      onProgress = null,\n      size = 40,\n      background = '#000',\n      width,\n      height\n    } = props,\n    other = _objectWithoutProperties(props, [\"completeRatio\", \"enabled\", \"onComplete\", \"onProgress\", \"size\", \"background\", \"width\", \"height\"]);\n  const [canvasEraser, setCanvasEraser] = React.useState(null);\n  const canvasRef = React.useRef(null);\n  const componentRef = useForkRef(canvasRef, ref);\n  const options = React.useMemo(() => ({\n    background,\n    completeRatio,\n    enabled,\n    onComplete,\n    onProgress,\n    size,\n    width,\n    height\n  }), [background, completeRatio, enabled, onComplete, onProgress, size, width, height]);\n  React.useEffect(() => {\n    const canvas = canvasEraserFactory();\n    setCanvasEraser(canvas);\n  }, []);\n  React.useEffect(() => {\n    if (canvasEraser) {\n      canvasEraser.init(canvasRef.current, options);\n    }\n  }, [canvasEraser, options]);\n  return /*#__PURE__*/_jsx(\"canvas\", _objectSpread({\n    ref: componentRef\n  }, other));\n};\nexport default /*#__PURE__*/React.forwardRef(CanvasEraser);","map":null,"metadata":{},"sourceType":"module"}