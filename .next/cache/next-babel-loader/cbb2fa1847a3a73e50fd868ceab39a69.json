{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport { useAnimation } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst transition = {\n  delay: 0.3,\n  translateY: {\n    duration: 1,\n    ease: [0, 0.7, 0.29, 0.97]\n  },\n  opacity: {\n    duration: 1,\n    ease: [0.25, 0.1, 0.25, 1.0]\n  }\n};\nconst variants = {\n  show: {\n    translateY: 0,\n    opacity: 1\n  },\n  hidden: {\n    translateY: 60,\n    opacity: 0\n  }\n};\nconst AnimateOnScreen = /*#__PURE__*/React.forwardRef(_c = _s((_ref, ref) => {\n  _s();\n  let {\n    children: childrenProp\n  } = _ref;\n  const animation = useAnimation();\n  const [inViewRef, inView] = useInView({\n    triggerOnce: true\n  });\n  React.useEffect(() => {\n    if (inView) {\n      animation.start('show');\n    }\n  }, [animation, inView]);\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    const handleRef = node => {\n      // Keep your own reference\n      inViewRef(node);\n\n      // Call the original ref, if any\n      if (ref) {\n        if (typeof ref === 'function') {\n          ref(node);\n        } else if (ref.current) {\n          ref.current = node;\n        }\n      }\n    };\n    return /*#__PURE__*/React.cloneElement(child, {\n      variants,\n      transition,\n      animate: animation,\n      initial: 'hidden',\n      ref: handleRef\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n}, \"BjO3DlGYt8beq9aHOLEgmc5cXeQ=\", false, function () {\n  return [useAnimation, useInView];\n}));\n_c2 = AnimateOnScreen;\nexport default _c3 = /*#__PURE__*/React.memo(AnimateOnScreen);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AnimateOnScreen$React.forwardRef\");\n$RefreshReg$(_c2, \"AnimateOnScreen\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["React","useAnimation","useInView","Fragment","_Fragment","jsxDEV","_jsxDEV","transition","delay","translateY","duration","ease","opacity","variants","show","hidden","AnimateOnScreen","forwardRef","_c","_s","_ref","ref","children","childrenProp","animation","inViewRef","inView","triggerOnce","useEffect","start","Children","map","child","isValidElement","handleRef","node","current","cloneElement","animate","initial","_c2","_c3","memo","$RefreshReg$"],"sources":["C:/Users/Prashant/Desktop/Projects/netlifych/components/AnimateOnScreen/AnimateOnScreen.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useAnimation } from 'framer-motion';\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\nconst transition = {\r\n  delay: 0.3,\r\n  translateY: {\r\n    duration: 1,\r\n    ease: [0, 0.7, 0.29, 0.97],\r\n  },\r\n  opacity: {\r\n    duration: 1,\r\n    ease: [0.25, 0.1, 0.25, 1.0],\r\n  },\r\n};\r\n\r\nconst variants = {\r\n  show: { translateY: 0, opacity: 1 },\r\n  hidden: { translateY: 60, opacity: 0 },\r\n};\r\n\r\nconst AnimateOnScreen = React.forwardRef(({ children: childrenProp }, ref) => {\r\n  const animation = useAnimation();\r\n  const [inViewRef, inView] = useInView({ triggerOnce: true });\r\n\r\n  React.useEffect(() => {\r\n    if (inView) {\r\n      animation.start('show');\r\n    }\r\n  }, [animation, inView]);\r\n\r\n  const children = React.Children.map(childrenProp, child => {\r\n    if (!React.isValidElement(child)) {\r\n      return null;\r\n    }\r\n\r\n    const handleRef = node => {\r\n      // Keep your own reference\r\n      inViewRef(node);\r\n\r\n      // Call the original ref, if any\r\n      if (ref) {\r\n        if (typeof ref === 'function') {\r\n          ref(node);\r\n        } else if (ref.current) {\r\n          ref.current = node;\r\n        }\r\n      }\r\n    };\r\n\r\n    return React.cloneElement(child, {\r\n      variants,\r\n      transition,\r\n      animate: animation,\r\n      initial: 'hidden',\r\n      ref: handleRef,\r\n    });\r\n  });\r\n\r\n  return <>{children}</>;\r\n});\r\n\r\nexport default React.memo(AnimateOnScreen);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,SAAS,QAAQ,6BAA6B;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,UAAU,GAAG;EACjBC,KAAK,EAAE,GAAG;EACVC,UAAU,EAAE;IACVC,QAAQ,EAAE,CAAC;IACXC,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI;EAC3B,CAAC;EACDC,OAAO,EAAE;IACPF,QAAQ,EAAE,CAAC;IACXC,IAAI,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;EAC7B;AACF,CAAC;AAED,MAAME,QAAQ,GAAG;EACfC,IAAI,EAAE;IAAEL,UAAU,EAAE,CAAC;IAAEG,OAAO,EAAE;EAAE,CAAC;EACnCG,MAAM,EAAE;IAAEN,UAAU,EAAE,EAAE;IAAEG,OAAO,EAAE;EAAE;AACvC,CAAC;AAED,MAAMI,eAAe,gBAAGhB,KAAK,CAACiB,UAAU,CAAAC,EAAA,GAAAC,EAAA,CAAC,CAAAC,IAAA,EAA6BC,GAAG,KAAK;EAAAF,EAAA;EAAA,IAApC;IAAEG,QAAQ,EAAEC;EAAa,CAAC,GAAAH,IAAA;EAClE,MAAMI,SAAS,GAAGvB,YAAY,CAAC,CAAC;EAChC,MAAM,CAACwB,SAAS,EAAEC,MAAM,CAAC,GAAGxB,SAAS,CAAC;IAAEyB,WAAW,EAAE;EAAK,CAAC,CAAC;EAE5D3B,KAAK,CAAC4B,SAAS,CAAC,MAAM;IACpB,IAAIF,MAAM,EAAE;MACVF,SAAS,CAACK,KAAK,CAAC,MAAM,CAAC;IACzB;EACF,CAAC,EAAE,CAACL,SAAS,EAAEE,MAAM,CAAC,CAAC;EAEvB,MAAMJ,QAAQ,GAAGtB,KAAK,CAAC8B,QAAQ,CAACC,GAAG,CAACR,YAAY,EAAES,KAAK,IAAI;IACzD,IAAI,eAAChC,KAAK,CAACiC,cAAc,CAACD,KAAK,CAAC,EAAE;MAChC,OAAO,IAAI;IACb;IAEA,MAAME,SAAS,GAAGC,IAAI,IAAI;MACxB;MACAV,SAAS,CAACU,IAAI,CAAC;;MAEf;MACA,IAAId,GAAG,EAAE;QACP,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;UAC7BA,GAAG,CAACc,IAAI,CAAC;QACX,CAAC,MAAM,IAAId,GAAG,CAACe,OAAO,EAAE;UACtBf,GAAG,CAACe,OAAO,GAAGD,IAAI;QACpB;MACF;IACF,CAAC;IAED,oBAAOnC,KAAK,CAACqC,YAAY,CAACL,KAAK,EAAE;MAC/BnB,QAAQ;MACRN,UAAU;MACV+B,OAAO,EAAEd,SAAS;MAClBe,OAAO,EAAE,QAAQ;MACjBlB,GAAG,EAAEa;IACP,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,oBAAO5B,OAAA,CAAAF,SAAA;IAAAkB,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;EAAA,QAtCmBrB,YAAY,EACFC,SAAS;AAAA,EAqCtC,CAAC;AAACsC,GAAA,GAvCGxB,eAAe;AAyCrB,eAAAyB,GAAA,gBAAezC,KAAK,CAAC0C,IAAI,CAAC1B,eAAe,CAAC;AAAC,IAAAE,EAAA,EAAAsB,GAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}