{"ast":null,"code":"\"use strict\";\n\nvar _s = $RefreshSig$();\nvar _interopRequireWildcard3 = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.render = render;\nexports.renderError = renderError;\nexports.default = exports.emitter = exports.router = exports.version = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"@babel/runtime/helpers/interopRequireWildcard\"));\nrequire(\"@next/polyfill-module\");\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\nvar _headManagerContext = require(\"../next-server/lib/head-manager-context\");\nvar _mitt = _interopRequireDefault(require(\"../next-server/lib/mitt\"));\nvar _routerContext = require(\"../next-server/lib/router-context\");\nvar _router = require(\"../next-server/lib/router/router\");\nvar _isDynamic = require(\"../next-server/lib/router/utils/is-dynamic\");\nvar querystring = _interopRequireWildcard3(require(\"../next-server/lib/router/utils/querystring\"));\nvar envConfig = _interopRequireWildcard3(require(\"../next-server/lib/runtime-config\"));\nvar _utils = require(\"../next-server/lib/utils\");\nvar _headManager = _interopRequireDefault(require(\"./head-manager\"));\nvar _pageLoader = _interopRequireWildcard3(require(\"./page-loader\"));\nvar _performanceRelayer = _interopRequireDefault(require(\"./performance-relayer\"));\nvar _router2 = require(\"./router\"); /* global location */\nconst data = JSON.parse(document.getElementById('__NEXT_DATA__').textContent);\nwindow.__NEXT_DATA__ = data;\nconst version = \"10.0.1\";\nexports.version = version;\nconst {\n  props: hydrateProps,\n  err: hydrateErr,\n  page,\n  query,\n  buildId,\n  assetPrefix,\n  runtimeConfig,\n  dynamicIds,\n  isFallback,\n  head: initialHeadData,\n  locales\n} = data;\nlet {\n  locale,\n  defaultLocale\n} = data;\nconst prefix = assetPrefix || ''; // With dynamic assetPrefix it's no longer possible to set assetPrefix at the build time\n// So, this is how we do it in the client side at runtime\n__webpack_public_path__ = `${prefix}/_next/`; //eslint-disable-line\n// Initialize next/config with the environment configuration\nenvConfig.setConfig({\n  serverRuntimeConfig: {},\n  publicRuntimeConfig: runtimeConfig || {}\n});\nlet asPath = (0, _utils.getURL)(); // make sure not to attempt stripping basePath for 404s\nif ((0, _router.hasBasePath)(asPath)) {\n  asPath = (0, _router.delBasePath)(asPath);\n}\nif (process.env.__NEXT_I18N_SUPPORT) {\n  const {\n    normalizeLocalePath\n  } = require('../next-server/lib/i18n/normalize-locale-path');\n  const {\n    detectDomainLocale\n  } = require('../next-server/lib/i18n/detect-domain-locale');\n  const {\n    parseRelativeUrl\n  } = require('../next-server/lib/router/utils/parse-relative-url');\n  const {\n    formatUrl\n  } = require('../next-server/lib/router/utils/format-url');\n  if (locales) {\n    const parsedAs = parseRelativeUrl(asPath);\n    const localePathResult = normalizeLocalePath(parsedAs.pathname, locales);\n    if (localePathResult.detectedLocale) {\n      parsedAs.pathname = localePathResult.pathname;\n      asPath = formatUrl(parsedAs);\n    } else {\n      // derive the default locale if it wasn't detected in the asPath\n      // since we don't prerender static pages with all possible default\n      // locales\n      defaultLocale = locale;\n    } // attempt detecting default locale based on hostname\n    const detectedDomain = detectDomainLocale(process.env.__NEXT_I18N_DOMAINS, window.location.hostname); // TODO: investigate if defaultLocale needs to be populated after\n    // hydration to prevent mismatched renders\n    if (detectedDomain) {\n      defaultLocale = detectedDomain.defaultLocale;\n    }\n  }\n}\nconst pageLoader = new _pageLoader.default(buildId, prefix, page);\nconst register = _ref => {\n  let [r, f] = _ref;\n  return pageLoader.registerPage(r, f);\n};\nif (window.__NEXT_P) {\n  // Defer page registration for another tick. This will increase the overall\n  // latency in hydrating the page, but reduce the total blocking time.\n  window.__NEXT_P.map(p => setTimeout(() => register(p), 0));\n}\nwindow.__NEXT_P = [];\nwindow.__NEXT_P.push = register;\nconst headManager = (0, _headManager.default)(initialHeadData);\nconst appElement = document.getElementById('__next');\nlet lastAppProps;\nlet lastRenderReject;\nlet webpackHMR;\nlet router;\nexports.router = router;\nlet CachedComponent;\nlet cachedStyleSheets;\nlet CachedApp, onPerfEntry;\nclass Container extends _react.default.Component {\n  componentDidCatch(componentErr, info) {\n    this.props.fn(componentErr, info);\n  }\n  componentDidMount() {\n    this.scrollToHash(); // We need to replace the router state if:\n    // - the page was (auto) exported and has a query string or search (hash)\n    // - it was auto exported and is a dynamic route (to provide params)\n    // - if it is a client-side skeleton (fallback render)\n    if (router.isSsr && (isFallback || data.nextExport && ((0, _isDynamic.isDynamicRoute)(router.pathname) || location.search) || hydrateProps && hydrateProps.__N_SSG && location.search)) {\n      // update query on mount for exported pages\n      router.replace(router.pathname + '?' + String(querystring.assign(querystring.urlQueryToSearchParams(router.query), new URLSearchParams(location.search))), asPath, {\n        // @ts-ignore\n        // WARNING: `_h` is an internal option for handing Next.js\n        // client-side hydration. Your app should _never_ use this property.\n        // It may change at any time without notice.\n        _h: 1,\n        // Fallback pages must trigger the data fetch, so the transition is\n        // not shallow.\n        // Other pages (strictly updating query) happens shallowly, as data\n        // requirements would already be present.\n        shallow: !isFallback\n      });\n    }\n  }\n  componentDidUpdate() {\n    this.scrollToHash();\n  }\n  scrollToHash() {\n    let {\n      hash\n    } = location;\n    hash = hash && hash.substring(1);\n    if (!hash) return;\n    const el = document.getElementById(hash);\n    if (!el) return; // If we call scrollIntoView() in here without a setTimeout\n    // it won't scroll properly.\n    setTimeout(() => el.scrollIntoView(), 0);\n  }\n  render() {\n    if (false) {\n      return this.props.children;\n    } else {\n      const {\n        ReactDevOverlay\n      } = require('@next/react-dev-overlay/lib/client');\n      return /*#__PURE__*/_react.default.createElement(ReactDevOverlay, null, this.props.children);\n    }\n  }\n}\nconst emitter = (0, _mitt.default)();\nexports.emitter = emitter;\nvar _default = async function () {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // This makes sure this specific lines are removed in production\n  if (true) {\n    webpackHMR = opts.webpackHMR;\n  }\n  const {\n    page: app,\n    mod\n  } = await pageLoader.loadPage('/_app');\n  CachedApp = app;\n  if (mod && mod.reportWebVitals) {\n    onPerfEntry = _ref2 => {\n      let {\n        id,\n        name,\n        startTime,\n        value,\n        duration,\n        entryType,\n        entries\n      } = _ref2;\n      // Combines timestamp with random number for unique ID\n      const uniqueID = `${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n      let perfStartEntry;\n      if (entries && entries.length) {\n        perfStartEntry = entries[0].startTime;\n      }\n      mod.reportWebVitals({\n        id: id || uniqueID,\n        name,\n        startTime: startTime || perfStartEntry,\n        value: value == null ? duration : value,\n        label: entryType === 'mark' || entryType === 'measure' ? 'custom' : 'web-vital'\n      });\n    };\n  }\n  let initialErr = hydrateErr;\n  try {\n    ;\n    ({\n      page: CachedComponent,\n      styleSheets: cachedStyleSheets\n    } = await pageLoader.loadPage(page));\n    if (true) {\n      const {\n        isValidElementType\n      } = require('react-is');\n      if (!isValidElementType(CachedComponent)) {\n        throw new Error(`The default export is not a React Component in page: \"${page}\"`);\n      }\n    }\n  } catch (error) {\n    if (_pageLoader.INITIAL_CSS_LOAD_ERROR in error) {\n      throw error;\n    } // This catches errors like throwing in the top level of a module\n    initialErr = error;\n  }\n  if (true) {\n    const {\n      getNodeError\n    } = require('@next/react-dev-overlay/lib/client'); // Server-side runtime errors need to be re-thrown on the client-side so\n    // that the overlay is rendered.\n    if (initialErr) {\n      if (initialErr === hydrateErr) {\n        setTimeout(() => {\n          let error;\n          try {\n            // Generate a new error object. We `throw` it because some browsers\n            // will set the `stack` when thrown, and we want to ensure ours is\n            // not overridden when we re-throw it below.\n            throw new Error(initialErr.message);\n          } catch (e) {\n            error = e;\n          }\n          error.name = initialErr.name;\n          error.stack = initialErr.stack;\n          const node = getNodeError(error);\n          throw node;\n        });\n      } // We replaced the server-side error with a client-side error, and should\n      // no longer rewrite the stack trace to a Node error.\n      else {\n        setTimeout(() => {\n          throw initialErr;\n        });\n      }\n    }\n  }\n  if (window.__NEXT_PRELOADREADY) {\n    await window.__NEXT_PRELOADREADY(dynamicIds);\n  }\n  exports.router = router = (0, _router2.createRouter)(page, query, asPath, {\n    initialProps: hydrateProps,\n    pageLoader,\n    App: CachedApp,\n    Component: CachedComponent,\n    initialStyleSheets: cachedStyleSheets,\n    wrapApp,\n    err: initialErr,\n    isFallback: Boolean(isFallback),\n    subscription: (_ref3, App) => {\n      let {\n        Component,\n        styleSheets,\n        props,\n        err\n      } = _ref3;\n      return render({\n        App,\n        Component,\n        styleSheets,\n        props,\n        err\n      });\n    },\n    locale,\n    locales,\n    defaultLocale\n  }); // call init-client middleware\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    Promise.resolve().then(() => (0, _interopRequireWildcard2.default)(require('next-plugin-loader?middleware=on-init-client!'))).then(initClientModule => {\n      return initClientModule.default({\n        router\n      });\n    }).catch(initClientErr => {\n      console.error('Error calling client-init for plugins', initClientErr);\n    });\n  }\n  const renderCtx = {\n    App: CachedApp,\n    Component: CachedComponent,\n    styleSheets: cachedStyleSheets,\n    props: hydrateProps,\n    err: initialErr\n  };\n  if (false) {\n    render(renderCtx);\n    return emitter;\n  } else {\n    return {\n      emitter,\n      render,\n      renderCtx\n    };\n  }\n};\nexports.default = _default;\nasync function render(renderingProps) {\n  if (renderingProps.err) {\n    await renderError(renderingProps);\n    return;\n  }\n  try {\n    await doRender(renderingProps);\n  } catch (renderErr) {\n    // bubble up cancelation errors\n    if (renderErr.cancelled) {\n      throw renderErr;\n    }\n    if (true) {\n      // Ensure this error is displayed in the overlay in development\n      setTimeout(() => {\n        throw renderErr;\n      });\n    }\n    await renderError((0, _extends2.default)({}, renderingProps, {\n      err: renderErr\n    }));\n  }\n} // This method handles all runtime and debug errors.\n// 404 and 500 errors are special kind of errors\n// and they are still handle via the main render method.\nfunction renderError(renderErrorProps) {\n  const {\n    App,\n    err\n  } = renderErrorProps; // In development runtime errors are caught by our overlay\n  // In production we catch runtime errors using componentDidCatch which will trigger renderError\n  if (true) {\n    // A Next.js rendering runtime error is always unrecoverable\n    // FIXME: let's make this recoverable (error in GIP client-transition)\n    webpackHMR.onUnrecoverableError(); // We need to render an empty <App> so that the `<ReactDevOverlay>` can\n    // render itself.\n    return doRender({\n      App: () => null,\n      props: {},\n      Component: () => null,\n      styleSheets: []\n    });\n  }\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    Promise.resolve().then(() => (0, _interopRequireWildcard2.default)(require('next-plugin-loader?middleware=on-error-client!'))).then(onClientErrorModule => {\n      return onClientErrorModule.default({\n        err\n      });\n    }).catch(onClientErrorErr => {\n      console.error('error calling on-error-client for plugins', onClientErrorErr);\n    });\n  } // Make sure we log the error to the console, otherwise users can't track down issues.\n  console.error(err);\n  return pageLoader.loadPage('/_error').then(_ref4 => {\n    let {\n      page: ErrorComponent,\n      styleSheets\n    } = _ref4;\n    // In production we do a normal render with the `ErrorComponent` as component.\n    // If we've gotten here upon initial render, we can use the props from the server.\n    // Otherwise, we need to call `getInitialProps` on `App` before mounting.\n    const AppTree = wrapApp(App);\n    const appCtx = {\n      Component: ErrorComponent,\n      AppTree,\n      router,\n      ctx: {\n        err,\n        pathname: page,\n        query,\n        asPath,\n        AppTree\n      }\n    };\n    return Promise.resolve(renderErrorProps.props ? renderErrorProps.props : (0, _utils.loadGetInitialProps)(App, appCtx)).then(initProps => doRender((0, _extends2.default)({}, renderErrorProps, {\n      err,\n      Component: ErrorComponent,\n      styleSheets,\n      props: initProps\n    })));\n  });\n} // If hydrate does not exist, eg in preact.\nlet isInitialRender = typeof _reactDom.default.hydrate === 'function';\nlet reactRoot = null;\nfunction renderReactElement(reactEl, domEl) {\n  if (process.env.__NEXT_REACT_MODE !== 'legacy') {\n    if (!reactRoot) {\n      const opts = {\n        hydrate: true\n      };\n      reactRoot = process.env.__NEXT_REACT_MODE === 'concurrent' ? _reactDom.default.unstable_createRoot(domEl, opts) : _reactDom.default.unstable_createBlockingRoot(domEl, opts);\n    }\n    reactRoot.render(reactEl);\n  } else {\n    // mark start of hydrate/render\n    if (_utils.ST) {\n      performance.mark('beforeRender');\n    } // The check for `.hydrate` is there to support React alternatives like preact\n    if (isInitialRender) {\n      _reactDom.default.hydrate(reactEl, domEl, markHydrateComplete);\n      isInitialRender = false;\n    } else {\n      _reactDom.default.render(reactEl, domEl, markRenderComplete);\n    }\n  }\n}\nfunction markHydrateComplete() {\n  if (!_utils.ST) return;\n  performance.mark('afterHydrate'); // mark end of hydration\n  performance.measure('Next.js-before-hydration', 'navigationStart', 'beforeRender');\n  performance.measure('Next.js-hydration', 'beforeRender', 'afterHydrate');\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-hydration').forEach(onPerfEntry);\n  }\n  clearMarks();\n}\nfunction markRenderComplete() {\n  if (!_utils.ST) return;\n  performance.mark('afterRender'); // mark end of render\n  const navStartEntries = performance.getEntriesByName('routeChange', 'mark');\n  if (!navStartEntries.length) {\n    return;\n  }\n  performance.measure('Next.js-route-change-to-render', navStartEntries[0].name, 'beforeRender');\n  performance.measure('Next.js-render', 'beforeRender', 'afterRender');\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-render').forEach(onPerfEntry);\n    performance.getEntriesByName('Next.js-route-change-to-render').forEach(onPerfEntry);\n  }\n  clearMarks();\n  ['Next.js-route-change-to-render', 'Next.js-render'].forEach(measure => performance.clearMeasures(measure));\n}\nfunction clearMarks() {\n  ;\n  ['beforeRender', 'afterHydrate', 'afterRender', 'routeChange'].forEach(mark => performance.clearMarks(mark));\n}\nfunction AppContainer(_ref5) {\n  let {\n    children\n  } = _ref5;\n  return /*#__PURE__*/_react.default.createElement(Container, {\n    fn: error => renderError({\n      App: CachedApp,\n      err: error\n    }).catch(err => console.error('Error rendering page: ', err))\n  }, /*#__PURE__*/_react.default.createElement(_routerContext.RouterContext.Provider, {\n    value: (0, _router2.makePublicRouterInstance)(router)\n  }, /*#__PURE__*/_react.default.createElement(_headManagerContext.HeadManagerContext.Provider, {\n    value: headManager\n  }, children)));\n}\n_c = AppContainer;\nconst wrapApp = App => wrappedAppProps => {\n  const appProps = (0, _extends2.default)({}, wrappedAppProps, {\n    Component: CachedComponent,\n    err: hydrateErr,\n    router\n  });\n  return /*#__PURE__*/_react.default.createElement(AppContainer, null, /*#__PURE__*/_react.default.createElement(App, appProps));\n};\nfunction doRender(_ref6) {\n  let {\n    App,\n    Component,\n    props,\n    err,\n    styleSheets\n  } = _ref6;\n  Component = Component || lastAppProps.Component;\n  props = props || lastAppProps.props;\n  const appProps = (0, _extends2.default)({}, props, {\n    Component,\n    err,\n    router\n  }); // lastAppProps has to be set before ReactDom.render to account for ReactDom throwing an error.\n  lastAppProps = appProps;\n  let canceled = false;\n  let resolvePromise;\n  const renderPromise = new Promise((resolve, reject) => {\n    if (lastRenderReject) {\n      lastRenderReject();\n    }\n    resolvePromise = () => {\n      lastRenderReject = null;\n      resolve();\n    };\n    lastRenderReject = () => {\n      canceled = true;\n      lastRenderReject = null;\n      const error = new Error('Cancel rendering route');\n      error.cancelled = true;\n      reject(error);\n    };\n  }); // This function has a return type to ensure it doesn't start returning a\n  // Promise. It should remain synchronous.\n  function onStart() {\n    if (\n    // We can skip this during hydration. Running it wont cause any harm, but\n    // we may as well save the CPU cycles.\n    isInitialRender || // We use `style-loader` in development, so we don't need to do anything\n    // unless we're in production:\n    true) {\n      return false;\n    }\n    const currentStyleTags = (0, _pageLoader.looseToArray)(document.querySelectorAll('style[data-n-href]'));\n    const currentHrefs = new Set(currentStyleTags.map(tag => tag.getAttribute('data-n-href')));\n    styleSheets.forEach(_ref7 => {\n      let {\n        href,\n        text\n      } = _ref7;\n      if (!currentHrefs.has(href)) {\n        const styleTag = document.createElement('style');\n        styleTag.setAttribute('data-n-href', href);\n        styleTag.setAttribute('media', 'x');\n        document.head.appendChild(styleTag);\n        styleTag.appendChild(document.createTextNode(text));\n      }\n    });\n    return true;\n  }\n  function onCommit() {\n    if (\n    // We use `style-loader` in development, so we don't need to do anything\n    // unless we're in production:\n    false &&\n    // We can skip this during hydration. Running it wont cause any harm, but\n    // we may as well save the CPU cycles:\n    !isInitialRender &&\n    // Ensure this render was not canceled\n    !canceled) {\n      const desiredHrefs = new Set(styleSheets.map(s => s.href));\n      const currentStyleTags = (0, _pageLoader.looseToArray)(document.querySelectorAll('style[data-n-href]'));\n      const currentHrefs = currentStyleTags.map(tag => tag.getAttribute('data-n-href')); // Toggle `<style>` tags on or off depending on if they're needed:\n      for (let idx = 0; idx < currentHrefs.length; ++idx) {\n        if (desiredHrefs.has(currentHrefs[idx])) {\n          currentStyleTags[idx].removeAttribute('media');\n        } else {\n          currentStyleTags[idx].setAttribute('media', 'x');\n        }\n      } // Reorder styles into intended order:\n      let referenceNode = document.querySelector('noscript[data-n-css]');\n      if (\n      // This should be an invariant:\n      referenceNode) {\n        styleSheets.forEach(_ref8 => {\n          let {\n            href\n          } = _ref8;\n          const targetTag = document.querySelector(`style[data-n-href=\"${href}\"]`);\n          if (\n          // This should be an invariant:\n          targetTag) {\n            referenceNode.parentNode.insertBefore(targetTag, referenceNode.nextSibling);\n            referenceNode = targetTag;\n          }\n        });\n      } // Finally, clean up server rendered stylesheets:\n      (0, _pageLoader.looseToArray)(document.querySelectorAll('link[data-n-p]')).forEach(el => {\n        el.parentNode.removeChild(el);\n      }); // Force browser to recompute layout, which should prevent a flash of\n      // unstyled content:\n      getComputedStyle(document.body, 'height');\n    }\n    resolvePromise();\n  }\n  const elem = /*#__PURE__*/_react.default.createElement(Root, {\n    callback: onCommit\n  }, /*#__PURE__*/_react.default.createElement(AppContainer, null, /*#__PURE__*/_react.default.createElement(App, appProps)));\n  onStart(); // We catch runtime errors using componentDidCatch which will trigger renderError\n  renderReactElement(process.env.__NEXT_STRICT_MODE ? /*#__PURE__*/_react.default.createElement(_react.default.StrictMode, null, elem) : elem, appElement);\n  return renderPromise;\n}\nfunction Root(_ref9) {\n  _s();\n  let {\n    callback,\n    children\n  } = _ref9;\n  // We use `useLayoutEffect` to guarantee the callback is executed\n  // as soon as React flushes the update.\n  _react.default.useLayoutEffect(() => callback(), [callback]);\n  if (process.env.__NEXT_TEST_MODE) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    _react.default.useEffect(() => {\n      window.__NEXT_HYDRATED = true;\n      if (window.__NEXT_HYDRATED_CB) {\n        window.__NEXT_HYDRATED_CB();\n      }\n    }, []);\n  } // We should ask to measure the Web Vitals after rendering completes so we\n  // don't cause any hydration delay:\n  _react.default.useEffect(() => {\n    (0, _performanceRelayer.default)(onPerfEntry);\n  }, []);\n  return children;\n}\n_s(Root, \"KDoBXdlwSU+O+uFsByO25XxhKDU=\");\n_c2 = Root;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Root\");","map":{"version":3,"sources":["../../client/index.tsx"],"names":["data","JSON","parse","document","getElementById","textContent","window","__NEXT_DATA__","version","process","env","__NEXT_VERSION","props","hydrateProps","err","hydrateErr","page","buildId","assetPrefix","runtimeConfig","dynamicIds","head","initialHeadData","locales","locale","defaultLocale","prefix","__webpack_public_path__","envConfig","setConfig","serverRuntimeConfig","publicRuntimeConfig","asPath","__NEXT_I18N_SUPPORT","normalizeLocalePath","require","detectDomainLocale","parseRelativeUrl","formatUrl","parsedAs","localePathResult","pathname","detectedLocale","detectedDomain","__NEXT_I18N_DOMAINS","location","hostname","pageLoader","PageLoader","register","r","f","registerPage","__NEXT_P","map","p","setTimeout","push","headManager","appElement","lastAppProps","lastRenderReject","webpackHMR","router","CachedComponent","cachedStyleSheets","CachedApp","onPerfEntry","Container","React","Component","componentDidCatch","componentErr","info","fn","componentDidMount","scrollToHash","isSsr","isFallback","nextExport","search","__N_SSG","replace","String","querystring","assign","urlQueryToSearchParams","query","URLSearchParams","_h","shallow","componentDidUpdate","hash","substring","el","scrollIntoView","render","children","ReactDevOverlay","emitter","opts","app","mod","loadPage","reportWebVitals","id","name","startTime","value","duration","entryType","entries","uniqueID","Date","now","Math","floor","random","perfStartEntry","length","label","initialErr","styleSheets","isValidElementType","Error","error","INITIAL_CSS_LOAD_ERROR","getNodeError","message","e","stack","node","__NEXT_PRELOADREADY","initialProps","App","initialStyleSheets","wrapApp","Boolean","subscription","__NEXT_PLUGINS","then","initClientModule","default","catch","initClientErr","console","renderCtx","renderingProps","renderError","doRender","renderErr","cancelled","renderErrorProps","onUnrecoverableError","onClientErrorModule","onClientErrorErr","ErrorComponent","AppTree","appCtx","ctx","Promise","resolve","initProps","isInitialRender","ReactDOM","hydrate","reactRoot","renderReactElement","reactEl","domEl","__NEXT_REACT_MODE","unstable_createRoot","unstable_createBlockingRoot","ST","performance","mark","markHydrateComplete","markRenderComplete","measure","getEntriesByName","forEach","clearMarks","navStartEntries","clearMeasures","AppContainer","wrappedAppProps","appProps","canceled","resolvePromise","renderPromise","reject","onStart","currentStyleTags","querySelectorAll","currentHrefs","Set","tag","getAttribute","href","text","has","styleTag","createElement","setAttribute","appendChild","createTextNode","onCommit","desiredHrefs","s","idx","removeAttribute","referenceNode","querySelector","targetTag","parentNode","insertBefore","nextSibling","removeChild","getComputedStyle","body","elem","__NEXT_STRICT_MODE","Root","callback","useLayoutEffect","__NEXT_TEST_MODE","useEffect","__NEXT_HYDRATED","__NEXT_HYDRATED_CB"],"mappings":"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","sourcesContent":["/* global location */\nimport '@next/polyfill-module'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HeadManagerContext } from '../next-server/lib/head-manager-context'\nimport mitt from '../next-server/lib/mitt'\nimport { RouterContext } from '../next-server/lib/router-context'\nimport type Router from '../next-server/lib/router/router'\nimport type {\n  AppComponent,\n  AppProps,\n  PrivateRouteInfo,\n} from '../next-server/lib/router/router'\nimport { delBasePath, hasBasePath } from '../next-server/lib/router/router'\nimport { isDynamicRoute } from '../next-server/lib/router/utils/is-dynamic'\nimport * as querystring from '../next-server/lib/router/utils/querystring'\nimport * as envConfig from '../next-server/lib/runtime-config'\nimport type { NEXT_DATA } from '../next-server/lib/utils'\nimport { getURL, loadGetInitialProps, ST } from '../next-server/lib/utils'\nimport initHeadManager from './head-manager'\nimport PageLoader, {\n  INITIAL_CSS_LOAD_ERROR,\n  looseToArray,\n  StyleSheetTuple,\n} from './page-loader'\nimport measureWebVitals from './performance-relayer'\nimport { createRouter, makePublicRouterInstance } from './router'\n\n/// <reference types=\"react-dom/experimental\" />\n\ndeclare let __webpack_public_path__: string\n\ndeclare global {\n  interface Window {\n    /* test fns */\n    __NEXT_HYDRATED?: boolean\n    __NEXT_HYDRATED_CB?: () => void\n\n    /* prod */\n    __NEXT_PRELOADREADY?: (ids?: string[]) => void\n    __NEXT_DATA__: NEXT_DATA\n    __NEXT_P: any[]\n  }\n}\n\ntype RenderRouteInfo = PrivateRouteInfo & { App: AppComponent }\ntype RenderErrorProps = Omit<RenderRouteInfo, 'Component' | 'styleSheets'>\n\nconst data: typeof window['__NEXT_DATA__'] = JSON.parse(\n  document.getElementById('__NEXT_DATA__')!.textContent!\n)\nwindow.__NEXT_DATA__ = data\n\nexport const version = process.env.__NEXT_VERSION\n\nconst {\n  props: hydrateProps,\n  err: hydrateErr,\n  page,\n  query,\n  buildId,\n  assetPrefix,\n  runtimeConfig,\n  dynamicIds,\n  isFallback,\n  head: initialHeadData,\n  locales,\n} = data\n\nlet { locale, defaultLocale } = data\n\nconst prefix = assetPrefix || ''\n\n// With dynamic assetPrefix it's no longer possible to set assetPrefix at the build time\n// So, this is how we do it in the client side at runtime\n__webpack_public_path__ = `${prefix}/_next/` //eslint-disable-line\n// Initialize next/config with the environment configuration\nenvConfig.setConfig({\n  serverRuntimeConfig: {},\n  publicRuntimeConfig: runtimeConfig || {},\n})\n\nlet asPath = getURL()\n\n// make sure not to attempt stripping basePath for 404s\nif (hasBasePath(asPath)) {\n  asPath = delBasePath(asPath)\n}\n\nif (process.env.__NEXT_I18N_SUPPORT) {\n  const {\n    normalizeLocalePath,\n  } = require('../next-server/lib/i18n/normalize-locale-path') as typeof import('../next-server/lib/i18n/normalize-locale-path')\n\n  const {\n    detectDomainLocale,\n  } = require('../next-server/lib/i18n/detect-domain-locale') as typeof import('../next-server/lib/i18n/detect-domain-locale')\n\n  const {\n    parseRelativeUrl,\n  } = require('../next-server/lib/router/utils/parse-relative-url') as typeof import('../next-server/lib/router/utils/parse-relative-url')\n\n  const {\n    formatUrl,\n  } = require('../next-server/lib/router/utils/format-url') as typeof import('../next-server/lib/router/utils/format-url')\n\n  if (locales) {\n    const parsedAs = parseRelativeUrl(asPath)\n    const localePathResult = normalizeLocalePath(parsedAs.pathname, locales)\n\n    if (localePathResult.detectedLocale) {\n      parsedAs.pathname = localePathResult.pathname\n      asPath = formatUrl(parsedAs)\n    } else {\n      // derive the default locale if it wasn't detected in the asPath\n      // since we don't prerender static pages with all possible default\n      // locales\n      defaultLocale = locale\n    }\n\n    // attempt detecting default locale based on hostname\n    const detectedDomain = detectDomainLocale(\n      process.env.__NEXT_I18N_DOMAINS as any,\n      window.location.hostname\n    )\n\n    // TODO: investigate if defaultLocale needs to be populated after\n    // hydration to prevent mismatched renders\n    if (detectedDomain) {\n      defaultLocale = detectedDomain.defaultLocale\n    }\n  }\n}\n\ntype RegisterFn = (input: [string, () => void]) => void\n\nconst pageLoader = new PageLoader(buildId, prefix, page)\nconst register: RegisterFn = ([r, f]) => pageLoader.registerPage(r, f)\nif (window.__NEXT_P) {\n  // Defer page registration for another tick. This will increase the overall\n  // latency in hydrating the page, but reduce the total blocking time.\n  window.__NEXT_P.map((p) => setTimeout(() => register(p), 0))\n}\nwindow.__NEXT_P = []\n;(window.__NEXT_P as any).push = register\n\nconst headManager = initHeadManager(initialHeadData)\nconst appElement = document.getElementById('__next')\n\nlet lastAppProps: AppProps\nlet lastRenderReject: (() => void) | null\nlet webpackHMR: any\nexport let router: Router\nlet CachedComponent: React.ComponentType\nlet cachedStyleSheets: StyleSheetTuple[]\nlet CachedApp: AppComponent, onPerfEntry: (metric: any) => void\n\nclass Container extends React.Component<{\n  fn: (err: Error, info?: any) => void\n}> {\n  componentDidCatch(componentErr: Error, info: any) {\n    this.props.fn(componentErr, info)\n  }\n\n  componentDidMount() {\n    this.scrollToHash()\n\n    // We need to replace the router state if:\n    // - the page was (auto) exported and has a query string or search (hash)\n    // - it was auto exported and is a dynamic route (to provide params)\n    // - if it is a client-side skeleton (fallback render)\n    if (\n      router.isSsr &&\n      (isFallback ||\n        (data.nextExport &&\n          (isDynamicRoute(router.pathname) || location.search)) ||\n        (hydrateProps && hydrateProps.__N_SSG && location.search))\n    ) {\n      // update query on mount for exported pages\n      router.replace(\n        router.pathname +\n          '?' +\n          String(\n            querystring.assign(\n              querystring.urlQueryToSearchParams(router.query),\n              new URLSearchParams(location.search)\n            )\n          ),\n        asPath,\n        {\n          // @ts-ignore\n          // WARNING: `_h` is an internal option for handing Next.js\n          // client-side hydration. Your app should _never_ use this property.\n          // It may change at any time without notice.\n          _h: 1,\n          // Fallback pages must trigger the data fetch, so the transition is\n          // not shallow.\n          // Other pages (strictly updating query) happens shallowly, as data\n          // requirements would already be present.\n          shallow: !isFallback,\n        }\n      )\n    }\n  }\n\n  componentDidUpdate() {\n    this.scrollToHash()\n  }\n\n  scrollToHash() {\n    let { hash } = location\n    hash = hash && hash.substring(1)\n    if (!hash) return\n\n    const el = document.getElementById(hash)\n    if (!el) return\n\n    // If we call scrollIntoView() in here without a setTimeout\n    // it won't scroll properly.\n    setTimeout(() => el.scrollIntoView(), 0)\n  }\n\n  render() {\n    if (process.env.NODE_ENV === 'production') {\n      return this.props.children\n    } else {\n      const { ReactDevOverlay } = require('@next/react-dev-overlay/lib/client')\n      return <ReactDevOverlay>{this.props.children}</ReactDevOverlay>\n    }\n  }\n}\n\nexport const emitter = mitt()\n\nexport default async (opts: { webpackHMR?: any } = {}) => {\n  // This makes sure this specific lines are removed in production\n  if (process.env.NODE_ENV === 'development') {\n    webpackHMR = opts.webpackHMR\n  }\n  const { page: app, mod } = await pageLoader.loadPage('/_app')\n  CachedApp = app as AppComponent\n\n  if (mod && mod.reportWebVitals) {\n    onPerfEntry = ({\n      id,\n      name,\n      startTime,\n      value,\n      duration,\n      entryType,\n      entries,\n    }) => {\n      // Combines timestamp with random number for unique ID\n      const uniqueID = `${Date.now()}-${\n        Math.floor(Math.random() * (9e12 - 1)) + 1e12\n      }`\n      let perfStartEntry\n\n      if (entries && entries.length) {\n        perfStartEntry = entries[0].startTime\n      }\n\n      mod.reportWebVitals({\n        id: id || uniqueID,\n        name,\n        startTime: startTime || perfStartEntry,\n        value: value == null ? duration : value,\n        label:\n          entryType === 'mark' || entryType === 'measure'\n            ? 'custom'\n            : 'web-vital',\n      })\n    }\n  }\n\n  let initialErr = hydrateErr\n\n  try {\n    ;({\n      page: CachedComponent,\n      styleSheets: cachedStyleSheets,\n    } = await pageLoader.loadPage(page))\n\n    if (process.env.NODE_ENV !== 'production') {\n      const { isValidElementType } = require('react-is')\n      if (!isValidElementType(CachedComponent)) {\n        throw new Error(\n          `The default export is not a React Component in page: \"${page}\"`\n        )\n      }\n    }\n  } catch (error) {\n    if (INITIAL_CSS_LOAD_ERROR in error) {\n      throw error\n    }\n    // This catches errors like throwing in the top level of a module\n    initialErr = error\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    const { getNodeError } = require('@next/react-dev-overlay/lib/client')\n    // Server-side runtime errors need to be re-thrown on the client-side so\n    // that the overlay is rendered.\n    if (initialErr) {\n      if (initialErr === hydrateErr) {\n        setTimeout(() => {\n          let error\n          try {\n            // Generate a new error object. We `throw` it because some browsers\n            // will set the `stack` when thrown, and we want to ensure ours is\n            // not overridden when we re-throw it below.\n            throw new Error(initialErr!.message)\n          } catch (e) {\n            error = e\n          }\n\n          error.name = initialErr!.name\n          error.stack = initialErr!.stack\n\n          const node = getNodeError(error)\n          throw node\n        })\n      }\n      // We replaced the server-side error with a client-side error, and should\n      // no longer rewrite the stack trace to a Node error.\n      else {\n        setTimeout(() => {\n          throw initialErr\n        })\n      }\n    }\n  }\n\n  if (window.__NEXT_PRELOADREADY) {\n    await window.__NEXT_PRELOADREADY(dynamicIds)\n  }\n\n  router = createRouter(page, query, asPath, {\n    initialProps: hydrateProps,\n    pageLoader,\n    App: CachedApp,\n    Component: CachedComponent,\n    initialStyleSheets: cachedStyleSheets,\n    wrapApp,\n    err: initialErr,\n    isFallback: Boolean(isFallback),\n    subscription: ({ Component, styleSheets, props, err }, App) =>\n      render({ App, Component, styleSheets, props, err }),\n    locale,\n    locales,\n    defaultLocale,\n  })\n\n  // call init-client middleware\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    import('next-plugin-loader?middleware=on-init-client!')\n      .then((initClientModule) => {\n        return initClientModule.default({ router })\n      })\n      .catch((initClientErr) => {\n        console.error('Error calling client-init for plugins', initClientErr)\n      })\n  }\n\n  const renderCtx = {\n    App: CachedApp,\n    Component: CachedComponent,\n    styleSheets: cachedStyleSheets,\n    props: hydrateProps,\n    err: initialErr,\n  }\n\n  if (process.env.NODE_ENV === 'production') {\n    render(renderCtx)\n    return emitter\n  } else {\n    return { emitter, render, renderCtx }\n  }\n}\n\nexport async function render(renderingProps: RenderRouteInfo) {\n  if (renderingProps.err) {\n    await renderError(renderingProps)\n    return\n  }\n\n  try {\n    await doRender(renderingProps)\n  } catch (renderErr) {\n    // bubble up cancelation errors\n    if (renderErr.cancelled) {\n      throw renderErr\n    }\n\n    if (process.env.NODE_ENV === 'development') {\n      // Ensure this error is displayed in the overlay in development\n      setTimeout(() => {\n        throw renderErr\n      })\n    }\n    await renderError({ ...renderingProps, err: renderErr })\n  }\n}\n\n// This method handles all runtime and debug errors.\n// 404 and 500 errors are special kind of errors\n// and they are still handle via the main render method.\nexport function renderError(renderErrorProps: RenderErrorProps) {\n  const { App, err } = renderErrorProps\n\n  // In development runtime errors are caught by our overlay\n  // In production we catch runtime errors using componentDidCatch which will trigger renderError\n  if (process.env.NODE_ENV !== 'production') {\n    // A Next.js rendering runtime error is always unrecoverable\n    // FIXME: let's make this recoverable (error in GIP client-transition)\n    webpackHMR.onUnrecoverableError()\n\n    // We need to render an empty <App> so that the `<ReactDevOverlay>` can\n    // render itself.\n    return doRender({\n      App: () => null,\n      props: {},\n      Component: () => null,\n      styleSheets: [],\n    })\n  }\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    import('next-plugin-loader?middleware=on-error-client!')\n      .then((onClientErrorModule) => {\n        return onClientErrorModule.default({ err })\n      })\n      .catch((onClientErrorErr) => {\n        console.error(\n          'error calling on-error-client for plugins',\n          onClientErrorErr\n        )\n      })\n  }\n\n  // Make sure we log the error to the console, otherwise users can't track down issues.\n  console.error(err)\n  return pageLoader\n    .loadPage('/_error')\n    .then(({ page: ErrorComponent, styleSheets }) => {\n      // In production we do a normal render with the `ErrorComponent` as component.\n      // If we've gotten here upon initial render, we can use the props from the server.\n      // Otherwise, we need to call `getInitialProps` on `App` before mounting.\n      const AppTree = wrapApp(App)\n      const appCtx = {\n        Component: ErrorComponent,\n        AppTree,\n        router,\n        ctx: { err, pathname: page, query, asPath, AppTree },\n      }\n      return Promise.resolve(\n        renderErrorProps.props\n          ? renderErrorProps.props\n          : loadGetInitialProps(App, appCtx)\n      ).then((initProps) =>\n        doRender({\n          ...renderErrorProps,\n          err,\n          Component: ErrorComponent,\n          styleSheets,\n          props: initProps,\n        })\n      )\n    })\n}\n\n// If hydrate does not exist, eg in preact.\nlet isInitialRender = typeof ReactDOM.hydrate === 'function'\nlet reactRoot: any = null\nfunction renderReactElement(reactEl: JSX.Element, domEl: HTMLElement) {\n  if (process.env.__NEXT_REACT_MODE !== 'legacy') {\n    if (!reactRoot) {\n      const opts = { hydrate: true }\n      reactRoot =\n        process.env.__NEXT_REACT_MODE === 'concurrent'\n          ? (ReactDOM as any).unstable_createRoot(domEl, opts)\n          : (ReactDOM as any).unstable_createBlockingRoot(domEl, opts)\n    }\n    reactRoot.render(reactEl)\n  } else {\n    // mark start of hydrate/render\n    if (ST) {\n      performance.mark('beforeRender')\n    }\n\n    // The check for `.hydrate` is there to support React alternatives like preact\n    if (isInitialRender) {\n      ReactDOM.hydrate(reactEl, domEl, markHydrateComplete)\n      isInitialRender = false\n    } else {\n      ReactDOM.render(reactEl, domEl, markRenderComplete)\n    }\n  }\n}\n\nfunction markHydrateComplete() {\n  if (!ST) return\n\n  performance.mark('afterHydrate') // mark end of hydration\n\n  performance.measure(\n    'Next.js-before-hydration',\n    'navigationStart',\n    'beforeRender'\n  )\n  performance.measure('Next.js-hydration', 'beforeRender', 'afterHydrate')\n\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-hydration').forEach(onPerfEntry)\n  }\n  clearMarks()\n}\n\nfunction markRenderComplete() {\n  if (!ST) return\n\n  performance.mark('afterRender') // mark end of render\n  const navStartEntries = performance.getEntriesByName('routeChange', 'mark')\n\n  if (!navStartEntries.length) {\n    return\n  }\n\n  performance.measure(\n    'Next.js-route-change-to-render',\n    navStartEntries[0].name,\n    'beforeRender'\n  )\n  performance.measure('Next.js-render', 'beforeRender', 'afterRender')\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-render').forEach(onPerfEntry)\n    performance\n      .getEntriesByName('Next.js-route-change-to-render')\n      .forEach(onPerfEntry)\n  }\n  clearMarks()\n  ;['Next.js-route-change-to-render', 'Next.js-render'].forEach((measure) =>\n    performance.clearMeasures(measure)\n  )\n}\n\nfunction clearMarks() {\n  ;[\n    'beforeRender',\n    'afterHydrate',\n    'afterRender',\n    'routeChange',\n  ].forEach((mark) => performance.clearMarks(mark))\n}\n\nfunction AppContainer({\n  children,\n}: React.PropsWithChildren<{}>): React.ReactElement {\n  return (\n    <Container\n      fn={(error) =>\n        renderError({ App: CachedApp, err: error }).catch((err) =>\n          console.error('Error rendering page: ', err)\n        )\n      }\n    >\n      <RouterContext.Provider value={makePublicRouterInstance(router)}>\n        <HeadManagerContext.Provider value={headManager}>\n          {children}\n        </HeadManagerContext.Provider>\n      </RouterContext.Provider>\n    </Container>\n  )\n}\n\nconst wrapApp = (App: AppComponent) => (\n  wrappedAppProps: Record<string, any>\n) => {\n  const appProps: AppProps = {\n    ...wrappedAppProps,\n    Component: CachedComponent,\n    err: hydrateErr,\n    router,\n  }\n  return (\n    <AppContainer>\n      <App {...appProps} />\n    </AppContainer>\n  )\n}\n\nfunction doRender({\n  App,\n  Component,\n  props,\n  err,\n  styleSheets,\n}: RenderRouteInfo): Promise<any> {\n  Component = Component || lastAppProps.Component\n  props = props || lastAppProps.props\n\n  const appProps: AppProps = {\n    ...props,\n    Component,\n    err,\n    router,\n  }\n  // lastAppProps has to be set before ReactDom.render to account for ReactDom throwing an error.\n  lastAppProps = appProps\n\n  let canceled = false\n  let resolvePromise: () => void\n  const renderPromise = new Promise((resolve, reject) => {\n    if (lastRenderReject) {\n      lastRenderReject()\n    }\n    resolvePromise = () => {\n      lastRenderReject = null\n      resolve()\n    }\n    lastRenderReject = () => {\n      canceled = true\n      lastRenderReject = null\n\n      const error: any = new Error('Cancel rendering route')\n      error.cancelled = true\n      reject(error)\n    }\n  })\n\n  // This function has a return type to ensure it doesn't start returning a\n  // Promise. It should remain synchronous.\n  function onStart(): boolean {\n    if (\n      // We can skip this during hydration. Running it wont cause any harm, but\n      // we may as well save the CPU cycles.\n      isInitialRender ||\n      // We use `style-loader` in development, so we don't need to do anything\n      // unless we're in production:\n      process.env.NODE_ENV !== 'production'\n    ) {\n      return false\n    }\n\n    const currentStyleTags = looseToArray<HTMLStyleElement>(\n      document.querySelectorAll('style[data-n-href]')\n    )\n    const currentHrefs = new Set(\n      currentStyleTags.map((tag) => tag.getAttribute('data-n-href'))\n    )\n\n    styleSheets.forEach(({ href, text }) => {\n      if (!currentHrefs.has(href)) {\n        const styleTag = document.createElement('style')\n        styleTag.setAttribute('data-n-href', href)\n        styleTag.setAttribute('media', 'x')\n\n        document.head.appendChild(styleTag)\n        styleTag.appendChild(document.createTextNode(text))\n      }\n    })\n    return true\n  }\n\n  function onCommit() {\n    if (\n      // We use `style-loader` in development, so we don't need to do anything\n      // unless we're in production:\n      process.env.NODE_ENV === 'production' &&\n      // We can skip this during hydration. Running it wont cause any harm, but\n      // we may as well save the CPU cycles:\n      !isInitialRender &&\n      // Ensure this render was not canceled\n      !canceled\n    ) {\n      const desiredHrefs = new Set(styleSheets.map((s) => s.href))\n      const currentStyleTags = looseToArray<HTMLStyleElement>(\n        document.querySelectorAll('style[data-n-href]')\n      )\n      const currentHrefs = currentStyleTags.map(\n        (tag) => tag.getAttribute('data-n-href')!\n      )\n\n      // Toggle `<style>` tags on or off depending on if they're needed:\n      for (let idx = 0; idx < currentHrefs.length; ++idx) {\n        if (desiredHrefs.has(currentHrefs[idx])) {\n          currentStyleTags[idx].removeAttribute('media')\n        } else {\n          currentStyleTags[idx].setAttribute('media', 'x')\n        }\n      }\n\n      // Reorder styles into intended order:\n      let referenceNode = document.querySelector('noscript[data-n-css]')\n      if (\n        // This should be an invariant:\n        referenceNode\n      ) {\n        styleSheets.forEach(({ href }) => {\n          const targetTag = document.querySelector(\n            `style[data-n-href=\"${href}\"]`\n          )\n          if (\n            // This should be an invariant:\n            targetTag\n          ) {\n            referenceNode!.parentNode!.insertBefore(\n              targetTag,\n              referenceNode!.nextSibling\n            )\n            referenceNode = targetTag\n          }\n        })\n      }\n\n      // Finally, clean up server rendered stylesheets:\n      looseToArray<HTMLLinkElement>(\n        document.querySelectorAll('link[data-n-p]')\n      ).forEach((el) => {\n        el.parentNode!.removeChild(el)\n      })\n\n      // Force browser to recompute layout, which should prevent a flash of\n      // unstyled content:\n      getComputedStyle(document.body, 'height')\n    }\n\n    resolvePromise()\n  }\n\n  const elem = (\n    <Root callback={onCommit}>\n      <AppContainer>\n        <App {...appProps} />\n      </AppContainer>\n    </Root>\n  )\n\n  onStart()\n\n  // We catch runtime errors using componentDidCatch which will trigger renderError\n  renderReactElement(\n    process.env.__NEXT_STRICT_MODE ? (\n      <React.StrictMode>{elem}</React.StrictMode>\n    ) : (\n      elem\n    ),\n    appElement!\n  )\n\n  return renderPromise\n}\n\nfunction Root({\n  callback,\n  children,\n}: React.PropsWithChildren<{\n  callback: () => void\n}>): React.ReactElement {\n  // We use `useLayoutEffect` to guarantee the callback is executed\n  // as soon as React flushes the update.\n  React.useLayoutEffect(() => callback(), [callback])\n  if (process.env.__NEXT_TEST_MODE) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      window.__NEXT_HYDRATED = true\n\n      if (window.__NEXT_HYDRATED_CB) {\n        window.__NEXT_HYDRATED_CB()\n      }\n    }, [])\n  }\n  // We should ask to measure the Web Vitals after rendering completes so we\n  // don't cause any hydration delay:\n  React.useEffect(() => {\n    measureWebVitals(onPerfEntry)\n  }, [])\n  return children as React.ReactElement\n}\n"]},"metadata":{},"sourceType":"script"}