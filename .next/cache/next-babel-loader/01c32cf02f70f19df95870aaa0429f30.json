{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport useForkRef from '../../hooks/useForkRef';\nimport canvasEraserFactory from './CanvasEraserFactory';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CanvasEraser = (props, ref) => {\n  const {\n      completeRatio = 1,\n      enabled = true,\n      onComplete = null,\n      onProgress = null,\n      size = 40,\n      background = '#000',\n      width,\n      height\n    } = props,\n    other = _objectWithoutProperties(props, [\"completeRatio\", \"enabled\", \"onComplete\", \"onProgress\", \"size\", \"background\", \"width\", \"height\"]);\n  const [canvasEraser, setCanvasEraser] = React.useState(null);\n  const canvasRef = React.useRef(null);\n  const componentRef = useForkRef(canvasRef, ref);\n  const options = React.useMemo(() => ({\n    background,\n    completeRatio,\n    enabled,\n    onComplete,\n    onProgress,\n    size,\n    width,\n    height\n  }), [background, completeRatio, enabled, onComplete, onProgress, size, width, height]);\n  React.useEffect(() => {\n    const canvas = canvasEraserFactory();\n    setCanvasEraser(canvas);\n  }, []);\n  React.useEffect(() => {\n    if (canvasEraser) {\n      canvasEraser.init(canvasRef.current, options);\n    }\n  }, [canvasEraser, options]);\n  return /*#__PURE__*/_jsx(\"canvas\", _objectSpread({\n    ref: componentRef\n  }, other));\n};\nexport default /*#__PURE__*/React.forwardRef(CanvasEraser);","map":null,"metadata":{},"sourceType":"module"}