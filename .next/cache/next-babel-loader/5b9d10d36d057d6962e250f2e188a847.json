{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { useCursorContext } from '../context/cursor';\nconst useCursorStyle = () => {\n  const [state, dispatch] = useCursorContext();\n  const addCursorBorder = React.useCallback(() => {\n    dispatch({\n      type: 'ADD_CURSOR_BORDER'\n    });\n  }, [dispatch]);\n  const removeCursorBorder = React.useCallback(() => {\n    dispatch({\n      type: 'REMOVE_CURSOR_BORDER'\n    });\n  }, [dispatch]);\n  const addCursorColor = React.useCallback(color => {\n    dispatch({\n      type: 'ADD_CURSOR_COLOR',\n      payload: color\n    });\n  }, [dispatch]);\n  const resetCursorColor = React.useCallback(() => {\n    dispatch({\n      type: 'RESET_CURSOR_COLOR'\n    });\n  }, [dispatch]);\n  const lockCursorPosition = React.useCallback(coordinates => {\n    dispatch({\n      type: 'LOCK_CURSOR_POSITION',\n      payload: coordinates\n    });\n  }, [dispatch]);\n  return _objectSpread(_objectSpread({}, state), {}, {\n    addCursorColor,\n    resetCursorColor,\n    addCursorBorder,\n    removeCursorBorder,\n    lockCursorPosition\n  });\n};\nexport default useCursorStyle;","map":null,"metadata":{},"sourceType":"module"}