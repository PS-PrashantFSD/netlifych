{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport React from 'react';\nimport { useMenuContext } from '../../context/menu';\nimport useCursorStyle from '../../hooks/useCursorStyle';\nimport StickyCursor from '../StickyCursor';\nimport { Button } from './styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MenuButton = (_ref, ref) => {\n  let {\n      sticky = true,\n      title = ''\n    } = _ref,\n    props = _objectWithoutProperties(_ref, [\"sticky\", \"title\"]);\n  const [, dispatch] = useMenuContext();\n  const {\n    addCursorBorder,\n    removeCursorBorder\n  } = useCursorStyle();\n  const handleOnToggle = React.useCallback(() => {\n    dispatch({\n      type: 'TOGGLE_MENU'\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/_jsx(StickyCursor, {\n    sticky: sticky,\n    children: /*#__PURE__*/_jsx(Button, _objectSpread(_objectSpread({\n      onMouseEnter: addCursorBorder,\n      onMouseLeave: removeCursorBorder,\n      onClick: handleOnToggle,\n      ref: ref\n    }, props), {}, {\n      children: /*#__PURE__*/_jsx(\"span\", {\n        children: title\n      })\n    }))\n  });\n};\nexport default /*#__PURE__*/React.memo(/*#__PURE__*/React.forwardRef(MenuButton));","map":null,"metadata":{},"sourceType":"module"}