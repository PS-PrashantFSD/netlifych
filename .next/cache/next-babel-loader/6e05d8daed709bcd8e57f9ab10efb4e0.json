{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar next = _interopRequireWildcard(require(\"./\"));\nvar _eventSourcePolyfill = _interopRequireDefault(require(\"./dev/event-source-polyfill\"));\nvar _onDemandEntriesClient = _interopRequireDefault(require(\"./dev/on-demand-entries-client\"));\nvar _webpackHotMiddlewareClient = _interopRequireDefault(require(\"./dev/webpack-hot-middleware-client\"));\nvar _devBuildWatcher = _interopRequireDefault(require(\"./dev/dev-build-watcher\"));\nvar _fouc = require(\"./dev/fouc\");\nvar _eventsource = require(\"./dev/error-overlay/eventsource\");\nvar querystring = _interopRequireWildcard(require(\"../next-server/lib/router/utils/querystring\")); /* globals import('./dev/noop'); */ // Temporary workaround for the issue described here:\n// https://github.com/vercel/next.js/issues/3775#issuecomment-407438123\n// The runtimeChunk doesn't have dynamic import handling code when there hasn't been a dynamic import\n// The runtimeChunk can't hot reload itself currently to correct it when adding pages using on-demand-entries\n// eslint-disable-next-line no-unused-expressions\nimport('./dev/noop');\n; // Support EventSource on Internet Explorer 11\nif (!window.EventSource) {\n  window.EventSource = _eventSourcePolyfill.default;\n}\nconst {\n  __NEXT_DATA__: {\n    assetPrefix\n  }\n} = window;\nconst prefix = assetPrefix || '';\nconst webpackHMR = (0, _webpackHotMiddlewareClient.default)({\n  assetPrefix: prefix\n});\nwindow.next = next;\n(0, next.default)({\n  webpackHMR\n}).then(_ref => {\n  let {\n    renderCtx,\n    render\n  } = _ref;\n  (0, _onDemandEntriesClient.default)({\n    assetPrefix: prefix\n  });\n  let buildIndicatorHandler = () => {};\n  function devPagesManifestListener(event) {\n    if (event.data.indexOf('devPagesManifest') !== -1) {\n      fetch(`${prefix}/_next/static/development/_devPagesManifest.json`).then(res => res.json()).then(manifest => {\n        window.__DEV_PAGES_MANIFEST = manifest;\n      }).catch(err => {\n        console.log(`Failed to fetch devPagesManifest`, err);\n      });\n    } else if (event.data.indexOf('serverOnlyChanges') !== -1) {\n      const {\n        pages\n      } = JSON.parse(event.data);\n      const router = window.next.router;\n      if (pages.includes(router.pathname)) {\n        console.log('Refreshing page data due to server-side change');\n        buildIndicatorHandler('building');\n        const clearIndicator = () => buildIndicatorHandler('built');\n        router.replace(router.pathname + '?' + String(querystring.assign(querystring.urlQueryToSearchParams(router.query), new URLSearchParams(location.search))), router.asPath).finally(clearIndicator);\n      }\n    }\n  }\n  devPagesManifestListener.unfiltered = true;\n  (0, _eventsource.getEventSourceWrapper)({}).addMessageListener(devPagesManifestListener);\n  if (process.env.__NEXT_BUILD_INDICATOR) {\n    (0, _devBuildWatcher.default)(handler => {\n      buildIndicatorHandler = handler;\n    });\n  } // delay rendering until after styles have been applied in development\n  (0, _fouc.displayContent)(() => {\n    render(renderCtx);\n  });\n}).catch(err => {\n  console.error('Error was not caught', err);\n});","map":{"version":3,"sources":["../../client/next-dev.js"],"names":["__REPLACE_NOOP_IMPORT__","window","EventSource","EventSourcePolyfill","__NEXT_DATA__","assetPrefix","prefix","webpackHMR","next","then","renderCtx","render","buildIndicatorHandler","devPagesManifestListener","event","data","indexOf","fetch","res","json","manifest","__DEV_PAGES_MANIFEST","catch","err","console","log","pages","JSON","parse","router","includes","pathname","clearIndicator","replace","String","querystring","assign","urlQueryToSearchParams","query","URLSearchParams","location","search","asPath","finally","unfiltered","addMessageListener","process","env","__NEXT_BUILD_INDICATOR","handler","error"],"mappings":"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","sourcesContent":["/* globals __REPLACE_NOOP_IMPORT__ */\nimport initNext, * as next from './'\nimport EventSourcePolyfill from './dev/event-source-polyfill'\nimport initOnDemandEntries from './dev/on-demand-entries-client'\nimport initWebpackHMR from './dev/webpack-hot-middleware-client'\nimport initializeBuildWatcher from './dev/dev-build-watcher'\nimport { displayContent } from './dev/fouc'\nimport { getEventSourceWrapper } from './dev/error-overlay/eventsource'\nimport * as querystring from '../next-server/lib/router/utils/querystring'\n\n// Temporary workaround for the issue described here:\n// https://github.com/vercel/next.js/issues/3775#issuecomment-407438123\n// The runtimeChunk doesn't have dynamic import handling code when there hasn't been a dynamic import\n// The runtimeChunk can't hot reload itself currently to correct it when adding pages using on-demand-entries\n// eslint-disable-next-line no-unused-expressions\n__REPLACE_NOOP_IMPORT__\n\n// Support EventSource on Internet Explorer 11\nif (!window.EventSource) {\n  window.EventSource = EventSourcePolyfill\n}\n\nconst {\n  __NEXT_DATA__: { assetPrefix },\n} = window\n\nconst prefix = assetPrefix || ''\nconst webpackHMR = initWebpackHMR({ assetPrefix: prefix })\n\nwindow.next = next\ninitNext({ webpackHMR })\n  .then(({ renderCtx, render }) => {\n    initOnDemandEntries({ assetPrefix: prefix })\n\n    let buildIndicatorHandler = () => {}\n\n    function devPagesManifestListener(event) {\n      if (event.data.indexOf('devPagesManifest') !== -1) {\n        fetch(`${prefix}/_next/static/development/_devPagesManifest.json`)\n          .then((res) => res.json())\n          .then((manifest) => {\n            window.__DEV_PAGES_MANIFEST = manifest\n          })\n          .catch((err) => {\n            console.log(`Failed to fetch devPagesManifest`, err)\n          })\n      } else if (event.data.indexOf('serverOnlyChanges') !== -1) {\n        const { pages } = JSON.parse(event.data)\n        const router = window.next.router\n\n        if (pages.includes(router.pathname)) {\n          console.log('Refreshing page data due to server-side change')\n\n          buildIndicatorHandler('building')\n\n          const clearIndicator = () => buildIndicatorHandler('built')\n\n          router\n            .replace(\n              router.pathname +\n                '?' +\n                String(\n                  querystring.assign(\n                    querystring.urlQueryToSearchParams(router.query),\n                    new URLSearchParams(location.search)\n                  )\n                ),\n              router.asPath\n            )\n            .finally(clearIndicator)\n        }\n      }\n    }\n    devPagesManifestListener.unfiltered = true\n    getEventSourceWrapper({}).addMessageListener(devPagesManifestListener)\n\n    if (process.env.__NEXT_BUILD_INDICATOR) {\n      initializeBuildWatcher((handler) => {\n        buildIndicatorHandler = handler\n      })\n    }\n\n    // delay rendering until after styles have been applied in development\n    displayContent(() => {\n      render(renderCtx)\n    })\n  })\n  .catch((err) => {\n    console.error('Error was not caught', err)\n  })\n"]},"metadata":{},"sourceType":"script"}